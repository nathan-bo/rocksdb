name: fuzz-test

on:
  workflow_dispatch:
  workflow_call:

jobs:
  fuzz-build:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:18.04

    steps:
      - uses: actions/checkout@v3

      - name: Pre-build
        run: apt update && apt install -y sudo python3 git clang-tools cmake make automake libtool gettext pkg-config build-essential clang-10 zlib1g-dev libbz2-dev ninja-build liblzma-dev autoconf libsnappy-dev libzstd-dev liblz4-dev binutils m4 g++-10

      - name: fuzbuild
        run: |
           #repo="${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}"
           #echo repo $repo
           #git remote add origin $repo
           echo "test"
           pwd
           echo 'git clone https://github.com/google/libprotobuf-mutator.git \n
             cd libprotobuf-mutator \n
             git checkout ffd86a32874e5c08a143019aad1aaf0907294c9f \n
             cd .. \n
             export CC=clang && export CXX=clang++ && mkdir LPM && cd LPM \n
             ln -s /usr/lib/x86_64-linux-gnu/libstdc++.so.6 /usr/lib/x86_64-linux-gnu/libstdc++.so \n
             ln -s /usr/bin/clang-10 /usr/bin/clang \n
             ln -s /usr/bin/clang++-10 /usr/bin/clang++ \n
             cmake ../libprotobuf-mutator -GNinja -DLIB_PROTO_MUTATOR_DOWNLOAD_PROTOBUF=ON -DLIB_PROTO_MUTATOR_TESTING=OFF -DCMAKE_BUILD_TYPE=Release \n
             ninja \n
             ninja install \n
             export PKG_CONFIG_PATH=$PWD:$PWD/external.protobuf/lib/pkgconfig/ \n
             export PATH=$PWD/external.protobuf/bin:$PATH \n
             cd $GITHUB_WORKSPACE \n
             git fetch \n
             git checkout master \n
             COMPILE_WITH_ASAN=1 make -j2 static_lib \n
             cd $GITHUB_WORKSPACE/fuzz \n
             make db_map_fuzzer \n
             make db_fuzzer \n
             ls -alFh $GITHUB_WORKSPACE/fuzz/ \n
             echo ASAN_OPTIONS=detect_leaks=0 ./db_fuzzer \n' > prepfuz.sh
           cat prepfuz.sh     
           chmod +x prepfuz.sh
           bash -xv prepfuz.sh
                                
      - name: cache files
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/fuzz/db_map_fuzzer*
          key: ${{ runner.os }}-db_map_fuzzer-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-db_map_fuzzer-
            
      - name: cache files
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/fuzz/db_fuzzer*
          key: ${{ runner.os }}-db_fuzzer-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-db_fuzzer-

      
        
#       - name: Upload db_map_fuzzer Artifact
#         uses: actions/upload-artifact@v3.1.0
#         with:
#           name: db_map_fuzzer
#           path: |
#              ${{ github.workspace }}/fuzz/db_map_fuzzer*
             
#       - name: Upload db_fuzzer Artifact
#         uses: actions/upload-artifact@v3.1.0
#         with:
#           name: db_fuzzer
#           path: |
#              ${{ github.workspace }}/fuzz/db_fuzzer*
             
             
             
  db_fuzzer:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:18.04
    continue-on-error: true
    needs: [fuzz-build]
      
    steps:  
            
#       - name: Download a Build Artifact
#         uses: actions/download-artifact@v3.0.0
#         with:
#           name: db_fuzzer
#           path: ${{ github.workspace }}/fuzz/db_fuzzer
      
      - name: Pre-build
        run: |
          apt update && apt install -y libtool sudo gettext pkg-config libsnappy-dev libzstd-dev liblz4-dev binutils m4
          mkdir -p $GITHUB_WORKSPACE/out
          
      - uses: actions/checkout@v3
      
      - name: cache files
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/fuzz/db_fuzzer*
          key: ${{ runner.os }}-db_fuzzer-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-db_fuzzer-
          
      - name: dbfuzzer
        run: |
          ls -alFh $GITHUB_WORKSPACE/fuzz
          sudo chown -R $USER:$USER "$GITHUB_WORKSPACE"
          sudo chown $USER:$USER "$GITHUB_WORKSPACE/fuzz/db_fuzzer"
          chmod 777 $GITHUB_WORKSPACE/fuzz/db_fuzzer
          whoami
          ASAN_OPTIONS=detect_odr_violation=0 $GITHUB_WORKSPACE/fuzz/db_fuzzer 2>&1 | sudo tee $GITHUB_WORKSPACE/out/db_fuzzer.log 
          cat $GITHUB_WORKSPACE/out/db_fuzzer.log
          ls -alFh $GITHUB_WORKSPACE/fuzz
          ls -alFh $GITHUB_WORKSPACE/out
          
      - name: cache files
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/out/db_fuzzer.log
          key: ${{ runner.os }}-db_fuzzer-log-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-db_fuzzer-log-
          
#       - name: Upload a Build Artifact
#         uses: actions/upload-artifact@v3.1.0
#         with:
#           name: db_fuzzer_log
#           path: ${{ github.workspace }}/out/db_fuzzer.log

  db_map_fuzzer:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:18.04
    continue-on-error: true
    needs:  [fuzz-build]
    
    steps:
      - uses: actions/checkout@v3
      
#       - name: Download a Build Artifact
#         uses: actions/download-artifact@v3.0.0
#         with:
#           name: db_map_fuzzer
#           path: ${{ github.workspace }}/fuzz/db_map_fuzzer
      
      - name: Pre-build
        run: |
          apt update && apt install -y sudo libtool gettext pkg-config libsnappy-dev libzstd-dev liblz4-dev binutils m4 
          mkdir -p $GITHUB_WORKSPACE/out/
          
      - name: cache files
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/fuzz/db_map_fuzzer*
          key: ${{ runner.os }}-db_map_fuzzer-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-db_map_fuzzer-
      
      - name: dbmapfuzzer
        run: |
          ls -l $GITHUB_WORKSPACE/out/
          sudo chown -R $USER:$USER "$GITHUB_WORKSPACE"
          sudo chown $USER:$USER "$GITHUB_WORKSPACE/fuzz/db_map_fuzzer"
          chmod 777 $GITHUB_WORKSPACE/fuzz/db_map_fuzzer
          whoami
          ls -alFh $GITHUB_WORKSPACE/fuzz/db_map_fuzzer
          ASAN_OPTIONS=detect_odr_violation=0 $GITHUB_WORKSPACE/fuzz/db_map_fuzzer 2>&1 | tee $GITHUB_WORKSPACE/out/db_map_fuzzer.log
          cat $GITHUB_WORKSPACE/out/db_map_fuzzer.log
          ls -alFh $GITHUB_WORKSPACE/out

      - name: cache files
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/out/db_map_fuzzer.log
          key: ${{ runner.os }}-db_map_fuzzer-log-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-db_map_fuzzer-log-
      
#       - name: dbmapfuzzer
#         run: |
#           ls -l $GITHUB_WORKSPACE/out/
#           sudo chown -R $USER:$USER "$GITHUB_WORKSPACE"
#           sudo chown $USER:$USER "$GITHUB_WORKSPACE/fuzz/db_map_fuzzer/db_map_fuzzer"
#           chmod 777 $GITHUB_WORKSPACE/fuzz/db_map_fuzzer/db_map_fuzzer
#           whoami
#           ls -alFh $GITHUB_WORKSPACE/fuzz/db_map_fuzzer
#           ASAN_OPTIONS=detect_odr_violation=0 $GITHUB_WORKSPACE/fuzz/db_map_fuzzer/db_map_fuzzer 2>&1 | tee $GITHUB_WORKSPACE/out/db_map_fuzzer.log
#           ls -alFh $GITHUB_WORKSPACE/out
      
#       - name: Upload a Build Artifact
#         uses: actions/upload-artifact@v3.1.0
#         with:
#           name: db_map_fuzzer_log
#           path: ${{ github.workspace }}/out/db_map_fuzzer.log
          
  fuzzer_sum:
    runs-on: ubuntu-latest
    container:
      image:  ubuntu:18.04
    needs: [db_map_fuzzer, db_fuzzer]
      
    steps:
      - uses: actions/checkout@v3
      
      - name: cache files
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/out/db_fuzzer.log
          key: ${{ runner.os }}-db_fuzzer-log-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-db_fuzzer-log-
      
      - name: cache files
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/out/db_map_fuzzer.log
          key: ${{ runner.os }}-db_map_fuzzer-log-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-db_map_fuzzer-log-

#       - name: Download a Build Artifact
#         uses: actions/download-artifact@v3.0.0
#         with:
#           path: |
#             ${{ github.workspace }}/out/db_map_fuzzer_log
#             ${{ github.workspace }}/out/db_fuzzer_log
      
      - name: fuzzersum
        run: |
          ls -alFh $GITHUB_WORKSPACE/out
          echo "------------------------"
          tail -20 $GITHUB_WORKSPACE/out/db_map_fuzzer.log | grep "==AddressSanitizer. Thread limit (4194304 threads) exceeded\. Dying\." || echo ""
          echo "------------------------"
          tail -20 $GITHUB_WORKSPACE/out/db_fuzzer.log | grep "==AddressSanitizer. Thread limit (4194304 threads) exceeded\. Dying\." || echo ""
